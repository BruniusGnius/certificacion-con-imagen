projectTitle,projectCategory,schooling,projectDate,sdgIds,introTitle,introContent,coverImageUrl,coverImageAltText,problemDescription,solutionProposed,innovationProcess,mediaType,mediaUrl,mediaAltText,teamMembers,technologies,additionalResources,imageGallery,rubricInnovation,rubricCollaboration,rubricImpact,rubricTechUse,rubricPresentation
"Robot Educativo Autónomo 'R.E.A.'","Robótica Educativa","Secundaria","2024-11-15","4,9","Conoce a R.E.A.: Tu Compañero Robótico de Aprendizaje","R.E.A. es un prototipo de robot diseñado para asistir a estudiantes en el aprendizaje de conceptos básicos de programación y electrónica de una manera interactiva y divertida, fomentando el pensamiento lógico y la resolución de problemas.","assets/img/robot-rea/cover.jpg","Robot R.E.A. blanco y azul sobre una mesa de trabajo, mostrando sus sensores frontales.","Los métodos tradicionales de enseñanza de programación pueden ser abstractos y poco motivadores para algunos estudiantes de secundaria, generando una barrera inicial hacia las STEM.","Desarrollamos a R.E.A., un robot físico programable con una interfaz gráfica sencilla (basada en bloques) y sensores que interactúan con el entorno, haciendo el aprendizaje tangible y lúdico.","<p><strong>Investigación:</strong> Analizamos plataformas robóticas existentes (LEGO Mindstorms, mBot) y realizamos encuestas a estudiantes y profesores sobre sus necesidades y preferencias.</p><p><strong>Diseño:</strong> Prototipado rápido del chasis usando impresión 3D (Tinkercad) y selección de componentes electrónicos clave: Arduino UNO como cerebro, sensores de ultrasonido para detección de obstáculos y servomotores para movimiento.</p><p><strong>Desarrollo:</strong> Programación del firmware base en C++ (Arduino IDE) para control de motores y lectura de sensores. Desarrollo de una interfaz gráfica personalizada usando Blockly para permitir programación visual por bloques.</p><p><strong>Pruebas:</strong> Múltiples sesiones de prueba con un grupo piloto de estudiantes de 1er año de secundaria. Recopilamos feedback sobre la facilidad de uso, la robustez del robot y la efectividad de las actividades propuestas, iterando sobre el diseño y el software.</p>","video","https://www.youtube.com/embed/8_pXTJ4sJvM",,"Juan Pérez García;Líder de Proyecto / Programador Firmware;https://polygonscan.com/token/0xTOKEN_ADDRESS_EXAMPLE_JUAN;Introducción a la Robótica con Arduino;Expert Roboteer;Master;Arduino (C++),Programación lógica,Resolución de problemas,Liderazgo de equipos,Diseño de circuitos básicos;Funcionalidad del código,Eficiencia algoritmos,Integración Hardware-Software,Colaboración;Instituto Tecnológico Juvenil;2024-11-09;assets/img/certificado.png;assets/img/certificado.png | María López Fernández;Diseñadora 3D / Encargada de Pruebas UX;;Introducción a la Robótica con Arduino;Design Architect;Master;Diseño 3D (Tinkercad),Metodologías de prueba de usuario,Comunicación efectiva,Empatía con el usuario,Documentación técnica;Ergonomía del diseño,Facilidad de uso (interfaz),Recolección de feedback,Presentación de resultados;Instituto Tecnológico Juvenil;2024-11-09;assets/img/certificado.png;assets/img/certificado.png","Arduino UNO;microchip;Hardware | C++ (Arduino);code;Software | Blockly;shapes;Software | Tinkercad;cube;Tool | Sensor Ultrasonido HC-SR04;wave-square;Hardware | Impresión 3D;print;Tool","Código Fuente del Firmware;https://github.com/gnius-club/robot-rea-example;github | Manual de Usuario (Borrador);assets/docs/rea-manual-draft.pdf;pdf | Blog de Desarrollo;https://medium.com/@gniusclub/construyendo-rea-paso-a-paso-example;website","assets/img/robot-rea/gallery-01.jpg;Prototipo inicial de R.E.A. con cables visibles y placa Arduino expuesta.;Prototipo v0.1 - ¡Primeros pasos! | assets/img/robot-rea/gallery-02.jpg;Estudiantes de secundaria interactuando con la interfaz de bloques de R.E.A. en una tablet.;Pruebas de Usabilidad con Grupo Piloto | assets/img/robot-rea/gallery-03.jpg;Diagrama del circuito electrónico de R.E.A. dibujado en Fritzing.;Esquema Eléctrico Simplificado",3,3,2,3,2
"Plataforma Web 'ConectaIdeas'","Desarrollo Web","Preparatoria","2024-05-20","8,9,17","ConectaIdeas: Donde Nacen las Colaboraciones Estudiantiles","Una red social educativa diseñada para que estudiantes de preparatoria puedan compartir ideas de proyectos, buscar colaboradores con habilidades complementarias y llevar sus iniciativas al siguiente nivel.","assets/img/conectaideas/cover.png","Captura de pantalla de la interfaz de ConectaIdeas mostrando perfiles de usuario y tarjetas de proyectos.","Los estudiantes a menudo tienen ideas innovadoras pero carecen de un espacio centralizado para encontrar compañeros con diferentes talentos (programación, diseño, comunicación) y formar equipos efectivos.","Creamos 'ConectaIdeas', una plataforma web con perfiles de usuario que destacan habilidades e intereses, un muro para publicar ideas de proyectos buscando equipo, y un sistema de mensajería para facilitar la comunicación.","<p><strong>Definición:</strong> Mapeo de funcionalidades clave (registro, perfil, publicar idea, buscar proyectos/usuarios, mensajería). Brainstorming de UX.</p><p><strong>Diseño:</strong> Wireframes y prototipos interactivos en Figma. Diseño de la identidad visual.</p><p><strong>Desarrollo (Full-Stack):</strong> Frontend con React y Tailwind CSS para una interfaz moderna y responsiva. Backend con Node.js (Express) y base de datos NoSQL (MongoDB) para flexibilidad. Implementación de autenticación (JWT).</p><p><strong>Despliegue y Pruebas:</strong> Despliegue inicial en Vercel/Netlify. Pruebas funcionales y de usabilidad con compañeros.</p>","video","https://www.youtube.com/embed/N5WZNj1X3QM",,"Carlos Mendoza;Desarrollador Full-Stack;;Desarrollo Web Moderno;App Maverick;Hacker;React,Node.js,MongoDB,JavaScript (ES6+),Git,API REST;Calidad del código,Arquitectura de la aplicación,Funcionalidad completa,Resolución de bugs;Prepa Federal #1;2024-05-14;assets/img/certificado.png;assets/img/certificado.png | Laura Jiménez;Diseñadora UI/UX;https://polygonscan.com/token/0xTOKEN_ADDRESS_EXAMPLE_LAURA;Diseño de Interfaces Digitales;Design Architect;Hacker;Figma,Prototipado interactivo,Diseño responsivo,User personas,Arquitectura de información;Claridad de la interfaz,Consistencia visual,Navegación intuitiva,Aplicación de principios UX;Prepa Federal #1;2024-05-14;assets/img/certificado.png;assets/img/certificado.png","React;react;Software | Node.js;node-js;Software | MongoDB;database;Software | Tailwind CSS;wind;Tool | Figma;figma;Tool | Git;git-alt;Tool","Prototipo Interactivo;https://www.figma.com/proto/EXAMPLE_ID/ConectaIdeas?node-id=1%3A2;link | Repositorio Frontend;https://github.com/gnius-club/conectaideas-frontend-example;github","assets/img/conectaideas/gallery-01.png;Wireframes de baja fidelidad de las pantallas principales de ConectaIdeas.;Wireframing Inicial | assets/img/conectaideas/gallery-02.png;Modelo de datos diseñado para la base de datos MongoDB.;Esquema de la Base de Datos",3,3,3,2,2
"App Móvil 'EcoScan'","Impacto Social","Secundaria","2024-08-01","11,12,13","EcoScan: Tu Guía de Reciclaje Inteligente","Una aplicación móvil (conceptual) que permitiría a los usuarios escanear códigos de barras de productos y recibir información instantánea sobre cómo reciclar correctamente su empaque.","assets/img/ecoscan/cover.jpg","Mockup de la pantalla principal de la app EcoScan en un smartphone, mostrando un botón de escaneo.","La confusión sobre qué y cómo reciclar diferentes tipos de empaques es una barrera significativa para aumentar las tasas de reciclaje en la comunidad.","Diseñamos el concepto y prototipo de 'EcoScan', una app que simplifica el reciclaje. Escaneas el producto, y la app te dice si el empaque es reciclable, en qué contenedor va, y dónde está el punto de reciclaje más cercano.","<p><strong>Investigación:</strong> Encuestas sobre hábitos de reciclaje y dificultades comunes. Análisis de apps similares.</p><p><strong>Diseño Conceptual:</strong> Definición del flujo de usuario principal (escanear -> ver info -> encontrar punto). Diseño de la arquitectura de información.</p><p><strong>Prototipado UI/UX:</strong> Creación de mockups y un prototipo navegable de alta fidelidad en Figma, simulando la experiencia de escaneo y visualización de resultados.</p><p><strong>Validación:</strong> Presentación del prototipo a compañeros y profesores para obtener feedback sobre la claridad y utilidad del concepto.</p>","image","assets/img/ecoscan/media.jpg","Collage mostrando varias pantallas clave del prototipo de la app EcoScan.","Sofía Herrera;Líder de Proyecto / Diseñadora UX;;Diseño de Apps para el Bien Social;Prompt Sage;Rookie;Investigación de usuarios,Diseño de flujo de usuario,Prototipado (Figma),Presentación de ideas;Claridad del problema,Originalidad de la solución,Calidad del prototipo,Viabilidad conceptual;Secundaria Comunitaria #5;2024-07-27;assets/img/certificado.png;assets/img/certificado.png | David Castillo;Investigador / Diseñador UI;;Diseño de Apps para el Bien Social;Design Architect;Rookie;Diseño de interfaz (UI),Paletas de color,Tipografía,Iconografía,Análisis de datos (encuestas);Estética de la interfaz,Coherencia visual,Accesibilidad básica,Fundamentación de decisiones;Secundaria Comunitaria #5;2024-07-27;assets/img/certificado.png;assets/img/certificado.png","Figma;figma;Tool | Google Forms;google;Tool | Diseño Centrado en el Usuario;users;Tool","Prototipo Navegable (Figma);https://www.figma.com/proto/EXAMPLE_ID2/EcoScan-App?node-id=1%3A10;link | Resultados Encuesta (Resumen);assets/docs/ecoscan-survey-summary.pdf;pdf","assets/img/ecoscan/gallery-01.jpg;Mapa mental mostrando las funcionalidades planeadas para EcoScan.;Brainstorming de Funcionalidades | assets/img/ecoscan/gallery-02.jpg;Primeros bocetos a mano de la interfaz de usuario de la app.;Bocetos Iniciales | assets/img/ecoscan/gallery-03.jpg;Paleta de colores y selección tipográfica para la identidad visual de EcoScan.;Guía de Estilo Visual",3,2,3,1,2
"Sistema de Riego Inteligente para Huerto Escolar","IoT (Internet de las Cosas)","Primaria","2025-03-10","2,6,15","¡Plantas Felices! Nuestro Riego Inteligente","Construimos un sistema automático que riega las plantas de nuestro huerto escolar solo cuando lo necesitan, usando sensores de humedad y una pequeña bomba de agua controlada por Micro:bit.","assets/img/riego-escolar/cover.jpg","Primer plano de una planta en el huerto escolar con un sensor de humedad clavado en la tierra y tubos finos de riego.","Regar el huerto escolar manualmente requiere tiempo, a veces se nos olvida, y podemos usar más agua de la necesaria, especialmente los fines de semana.","Un sistema automatizado que mide la humedad de la tierra. Si está seca, activa una bomba que lleva agua a las plantas por un tiempo corto. Programamos todo usando Micro:bit y bloques.","<p><strong>Aprendizaje:</strong> Entendimos cómo funcionan los sensores de humedad y cómo programar el Micro:bit para leerlos y activar salidas (la bomba).</p><p><strong>Construcción:</strong> Conectamos el sensor de humedad y un relé (para controlar la bomba de forma segura) al Micro:bit. Montamos la pequeña bomba de agua y los tubos de riego.</p><p><strong>Programación:</strong> Usamos MakeCode (bloques) para crear el programa: 'Si humedad < umbral, encender bomba por X segundos, esperar'.</p><p><strong>Instalación y Ajuste:</strong> Colocamos el sensor en la tierra, la bomba en un depósito de agua, y ajustamos el umbral de humedad y el tiempo de riego observando las plantas.</p>","video","https://www.youtube.com/embed/BZPBiDxJN38",,"Mateo Vargas;Programador Principal;;Pequeños Inventores con Micro:bit;Micro Programmer;Rookie;Programación por bloques (MakeCode),Lógica condicional (Si... entonces),Lectura de sensores,Control de actuadores (relé);Funcionamiento del código,Claridad de los bloques,Resolución del problema planteado;Colegio El Roble;2025-03-07;assets/img/certificado.png;assets/img/certificado.png | Valentina Ríos;Ensambladora / Cuidadora del Huerto;;Pequeños Inventores con Micro:bit;Tech Voyager;Rookie;Conexión de componentes electrónicos,Seguimiento de diagramas simples,Observación y registro,Cuidado de plantas;Correcta conexión de partes,Funcionamiento del sistema físico,Mantenimiento del huerto;Colegio El Roble;2025-03-07;assets/img/certificado.png;assets/img/certificado.png","Micro:bit;robot;Hardware | MakeCode;puzzle-piece;Software | Sensor de Humedad del Suelo;droplet;Hardware | Relé;toggle-on;Hardware | Bomba de Agua (Pequeña);faucet-drip;Hardware","Guía de Conexión (Dibujo);assets/docs/riego-diagram.png;link | Código MakeCode (Compartido);https://makecode.microbit.org/_EXAMPLECODE;website","assets/img/riego-escolar/gallery-01.jpg;El Micro:bit conectado con cables al sensor de humedad y al módulo relé.;Conexiones Eléctricas | assets/img/riego-escolar/gallery-02.jpg;Captura de pantalla del código en bloques creado en MakeCode.;Nuestro Programa | assets/img/riego-escolar/gallery-03.jpg;El sistema de riego funcionando, con agua saliendo por los tubos hacia las plantas.;¡Funcionando!",2,3,2,2,2
"Animación Stop-Motion 'Viaje Estelar'","Multimedia","Primaria","2024-06-30","4","¡Despegue! Una Aventura Espacial en Stop Motion","Creamos un cortometraje animado usando la técnica de stop motion. Cuenta la historia de un valiente astronauta (hecho de plastilina) que viaja a un planeta desconocido lleno de criaturas extrañas.","assets/img/viaje-estelar/cover.png","Escena clave de la animación stop motion mostrando al astronauta de plastilina frente a una criatura alienígena colorida.","Queríamos contar una historia visualmente atractiva y aprender cómo se hacen las películas animadas que vemos en la tele.","Utilizamos la técnica de stop motion, tomando cientos de fotos de personajes y escenarios hechos a mano (plastilina, cartón), moviéndolos un poquito cada vez. Luego unimos las fotos en un video y añadimos sonidos.","<p><strong>Guion e Historia:</strong> Creamos una historia simple sobre un viaje espacial. Dibujamos un storyboard con las escenas principales.</p><p><strong>Diseño y Creación:</strong> Diseñamos y construimos los personajes principales (astronauta, alienígenas) con plastilina y los escenarios (nave espacial, planeta) con cajas de cartón pintadas y otros materiales reciclados.</p><p><strong>Fotografía (Stop Motion):</strong> Montamos un pequeño set con buena iluminación (lámparas). Usamos una tablet con la app Stop Motion Studio para tomar las fotos, moviendo los personajes cuadro a cuadro con mucha paciencia.</p><p><strong>Edición y Sonido:</strong> Editamos la secuencia de fotos en la misma app, ajustamos la velocidad y añadimos efectos de sonido básicos (grabados por nosotros) y música libre de derechos.</p>","video","https://www.youtube.com/embed/O9zZAxnQRAM",,"Elena Gómez;Directora / Animadora Principal;;Creación de Historias Animadas;Reality Master;Rookie;Stop Motion,Narrativa visual,Diseño de personajes (básico),Edición de video (básico),Paciencia;Originalidad de la historia,Fluidez de la animación,Calidad visual,Trabajo en equipo;Primaria Benito Juárez;2024-06-27;assets/img/certificado.png;assets/img/certificado.png | Javier Luna;Constructor de Escenarios / Sonidista;;Creación de Historias Animadas;Design Architect;Rookie;Construcción con materiales reciclados,Creatividad manual,Grabación de audio simple,Organización;Detalle de los escenarios,Originalidad de los sonidos,Colaboración,Cuidado del material;Primaria Benito Juárez;2024-06-27;assets/img/certificado.png;assets/img/certificado.png","Stop Motion Studio (App);film;Software | Plastilina;palette;Tool | Materiales Reciclados;recycle;Tool | Tablet/Smartphone;tablet-screen-button;Hardware","Storyboard Original (Fotos);assets/img/viaje-estelar/storyboard.jpg;link","assets/img/viaje-estelar/gallery-01.jpg;Foto del personaje astronauta de plastilina antes de empezar a animar.;Nuestro Protagonista | assets/img/viaje-estelar/gallery-02.jpg;El set de grabación montado con cajas de cartón pintadas simulando un planeta.;Creando el Planeta Misterioso | assets/img/viaje-estelar/gallery-03.jpg;Captura de pantalla de la interfaz de la app Stop Motion Studio durante la edición.;Editando Cuadro a Cuadro",2,3,1,1,3
"Estación Meteorológica con Raspberry Pi","IoT","Secundaria","2024-09-15","7,11,13","El Clima Local en Tiempo Real","Construcción de una estación meteorológica básica usando Raspberry Pi, sensor BME280 (temperatura, humedad, presión) y anemómetro simple. Datos visualizados en un dashboard web.","assets/img/estacion-meteoro/cover.jpg","Estación meteorológica casera montada en exterior con sensores visibles.","Las estaciones meteorológicas profesionales son caras. Queríamos construir una versión de bajo costo para aprender sobre sensores ambientales y visualización de datos.","Usar Raspberry Pi para leer datos del BME280 vía I2C y pulsos del anemómetro vía GPIO. Enviar datos a una base de datos local (SQLite) y mostrarlos en un dashboard web simple (Flask/Dash).","<p><strong>Hardware:</strong> Conexión de BME280 (I2C) y anemómetro (GPIO) a Raspberry Pi. Diseño de carcasa protectora.</p><p><strong>Software (Python):</strong> Script para leer sensores periódicamente, almacenar en SQLite. App web Flask para mostrar datos actuales y gráficos históricos básicos.</p><p><strong>Instalación:</strong> Montaje en exterior, asegurando protección contra lluvia y alimentación.</p>","image","assets/img/estacion-meteoro/media.jpg","Dashboard web mostrando temperatura, humedad, presión y velocidad del viento actuales y gráficas simples.","Ana Torres;Programadora Python / Backend;;IoT y Sensores Ambientales;AI Paragon;Master;Python,Raspberry Pi,Flask,SQLite,Sensores (BME280);Lógica script,Manejo BD,API básica;Club de Ciencias Tesla;2024-09-10;assets/img/certificado.png;assets/img/certificado.png | Luis Vega;Hardware / Montaje;;IoT y Sensores Ambientales;Tech Voyager;Master;Raspberry Pi (hardware),Conexión sensores,Montaje exterior,Electrónica básica;Ensamblaje correcto,Protección hardware;Club de Ciencias Tesla;2024-09-10;assets/img/certificado.png;assets/img/certificado.png","Raspberry Pi;raspberry-pi;Hardware | BME280;temperature-half;Hardware | Anemómetro;wind;Hardware | Python;python;Software | Flask;network-wired;Software | SQLite;database;Software","Tutorial BME280 RPi;https://learn.adafruit.com/adafruit-bme280-humidity-barometric-pressure-temperature-sensor-breakout;link | Código Ejemplo;https://github.com/gnius-examples/rpi-weather-station;github","assets/img/estacion-meteoro/gallery-01.jpg;Conexiones del sensor BME280 y anemómetro a la Raspberry Pi.;Conexiones | assets/img/estacion-meteoro/gallery-02.jpg;Gráfica de temperatura generada por el dashboard web.;Gráfica Temperatura | assets/img/estacion-meteoro/gallery-03.jpg;Estación montada en el exterior con su carcasa protectora.;Montaje Final",3,2,2,3,2
"Generador de Música Lo-Fi con IA (Magenta.js)","Inteligencia Artificial / Música","Preparatoria","2025-01-20","9,17","Ritmos Relajantes por IA: Lo-Fi Generator","Una aplicación web que usa Magenta.js (TensorFlow.js) para generar secuencias musicales cortas (batería, bajo, melodía) en estilo Lo-Fi, permitiendo al usuario interactuar mínimamente.","assets/img/lofi-ai/cover.png","Interfaz web simple con botones para generar patrones de batería, bajo y melodía Lo-Fi.","Explorar la generación musical con IA en el navegador. Crear una herramienta sencilla para producir música ambiental Lo-Fi de forma automática.","Usar modelos pre-entrenados de Magenta.js (ej. Drums RNN, Melody RNN) adaptados o configurados para generar patrones típicos de Lo-Fi (tempos lentos, ritmos sencillos, acordes jazz). Integrar en una interfaz web simple con Tone.js para la reproducción.","<p><strong>Investigación:</strong> Estudio de Magenta.js y sus modelos (RNNs). Análisis de características musicales Lo-Fi.</p><p><strong>Frontend:</strong> Interfaz HTML/CSS/JS con botones ('Generar Batería', 'Generar Bajo', 'Generar Melodía', 'Play/Stop').</p><p><strong>Backend (JS en Frontend):</strong> Carga de modelos Magenta.js. Funciones JS para llamar a `model.continueSequence()` o similar para generar patrones. Conversión de la salida de Magenta (NoteSequence) a formato usable por Tone.js.</p><p><strong>Audio:</strong> Uso de Tone.js para sintetizar/reproducir las secuencias generadas.</p>","video","https://www.youtube.com/embed/dQw4w9WgXcQ",,"Sofia Reyes;Desarrolladora IA/JS (Magenta);;IA Generativa y Música;Prompt Sage;Hacker;JavaScript,TensorFlow.js,Magenta.js,Web Audio API (Tone.js);Integración Magenta,Generación secuencias,Control reproducción;Instituto de Música Computacional;2025-01-15;assets/img/certificado.png;assets/img/certificado.png | Mateo Diaz;Músico / Diseñador Sonido;;IA Generativa y Música;Design Architect;Master;Teoría Musical (Lo-Fi),Síntesis Sonido (Tone.js),Diseño Sonoro;Calidad sonidos,Coherencia estilo Lo-Fi;Instituto de Música Computacional;2025-01-15;assets/img/certificado.png;assets/img/certificado.png","Magenta.js;robot;Software | TensorFlow.js;code;Software | Tone.js;headphones;Software | JavaScript;js;Software | Música Lo-Fi;music;Tool","Documentación Magenta.js;https://magenta.tensorflow.org/js;website | Ejemplos Magenta.js;https://magenta.tensorflow.org/demos#magenta-js;link | Demo Web App;https://lofi-ai-example.glitch.me;link","assets/img/lofi-ai/gallery-01.png;Código JavaScript mostrando la carga de un modelo RNN de Magenta.;Carga Modelo IA | assets/img/lofi-ai/gallery-02.png;Secuencia de notas generada por IA visualizada (ej. piano roll).;Secuencia Generada | assets/img/lofi-ai/gallery-03.png;Interfaz web con controles de generación y reproducción.;Interfaz Usuario",3,3,2,3,3
"Simulador de Ecosistema Simple (Python/Pygame)","Biología / Simulación","Secundaria","2024-11-30","14,15","Vida Virtual: Simulador de Ecosistema","Un simulador 2D simple creado con Pygame donde interactúan poblaciones de 'hierba', 'herbívoros' y 'carnívoros' con reglas básicas de crecimiento, consumo y reproducción.","assets/img/ecosim/cover.jpg","Captura de pantalla del simulador mostrando puntos verdes (hierba), azules (herbívoros) y rojos (carnívoros) en un fondo simple.","Entender las dinámicas de poblaciones y las relaciones depredador-presa puede ser abstracto. Una simulación visual ayuda a comprender estos conceptos.","Crear clases en Python para Hierba, Herbívoro y Carnívoro. Implementar reglas: hierba crece, herbívoros comen hierba y se reproducen si comen suficiente, carnívoros comen herbívoros y se reproducen si comen. Usar Pygame para visualizar las entidades y su interacción.","<p><strong>Diseño:</strong> Definición de entidades y reglas de interacción (crecimiento, consumo, reproducción, muerte por inanición).</p><p><strong>Programación (Python/Pygame):</strong> Crear clases para cada entidad con atributos (posición, energía) y métodos (mover, comer, reproducir). Bucle principal de Pygame para actualizar estado de cada entidad, manejar interacciones (colisiones/consumo) y dibujar en pantalla.</p><p><strong>Visualización:</strong> Representar cada entidad con formas/colores simples en Pygame.</p>","image","assets/img/ecosim/media.jpg","Gráfica mostrando la evolución de las poblaciones (hierba, herbívoros, carnívoros) a lo largo del tiempo en la simulación.","David Morales;Programador Python/Pygame;;Simulación y Modelado;Code Explorer;Master;Python,Pygame,Programación Orientada a Objetos,Lógica de simulación;Funcionalidad simulación,Código clases,Visualización;Club de Biología Computacional;2024-11-25;assets/img/certificado.png;assets/img/certificado.png | Clara Ponce;Bióloga / Definición Reglas;;Simulación y Modelado;Algorithm Seeker;Master;Ecología de poblaciones,Relaciones tróficas,Definición reglas biológicas;Coherencia reglas,Realismo (simplificado);Club de Biología Computacional;2024-11-25;assets/img/certificado.png;assets/img/certificado.png","Python;python;Software | Pygame;gamepad;Software | Simulación;diagram-project;Tool | Ecología;leaf;Tool","Tutorial Pygame Básico;https://www.pygame.org/docs/tut/PygameIntro.html;link | Artículo Dinámica Poblaciones;https://es.khanacademy.org/science/biology/ecology/population-ecology/a/population-dynamics;link","assets/img/ecosim/gallery-01.png;Código Python de la clase Herbívoro.;Clase Herbívoro | assets/img/ecosim/gallery-02.png;Simulación en ejecución temprana con pocas entidades.;Ejecución Temprana | assets/img/ecosim/gallery-03.png;Estado de la simulación después de varias generaciones, mostrando fluctuaciones.;Dinámica Poblacional",2,3,3,2,3
"Detector de Fake News Simple (Análisis de Texto)","Inteligencia Artificial / Impacto Social","Preparatoria","2025-04-10","16","Detectando Desinformación: Análisis Básico","Un script o herramienta web simple que analiza características superficiales de un titular o texto corto (uso de mayúsculas excesivo, signos de exclamación, palabras clave 'sensacionalistas') para dar un indicador básico de posible desinformación (no una detección real).","assets/img/fake-news-detector/cover.jpg","Interfaz mostrando un campo para pegar texto y un 'medidor de sospecha' simple.","La desinformación online es un problema creciente. Esta herramienta busca crear conciencia sobre características comunes (aunque no definitivas) de titulares engañosos.","Analizar un texto de entrada buscando patrones: - Exceso de MAYÚSCULAS. - Múltiples signos de exclamación/interrogación (!!!, ???). - Presencia de palabras en una lista predefinida de 'clickbait' o sensacionalistas (increíble, secreto revelado, odiarás esto, etc.). Asignar 'puntos de sospecha' por cada patrón encontrado.","<p><strong>Investigación:</strong> Análisis de patrones comunes en titulares de fake news/clickbait.</p><p><strong>Desarrollo (Python/JS):</strong> Crear funciones para detectar: uso excesivo de mayúsculas, puntuación exagerada, presencia de palabras clave de una lista.</p><p><strong>Puntuación:</strong> Asignar pesos a cada patrón y calcular un score final de 'sospecha'.</p><p><strong>Interfaz (Opcional Web):</strong> Crear interfaz simple para pegar texto y mostrar el score/indicador.</p>","image","assets/img/fake-news-detector/media.jpg","Ejemplo de texto analizado con indicadores resaltando mayúsculas excesivas y palabras clave sospechosas.","Elena Rios;Programadora Python/JS;;IA y Sociedad Digital;AI Paragon;Master;Python/JavaScript,Procesamiento de Texto (Regex),Lógica de reglas;Funcionalidad detección patrones,Cálculo score;Prepa Conciencia Digital;2025-04-05;assets/img/certificado.png;assets/img/certificado.png | Javier Solano;Investigador / Lista Palabras;;IA y Sociedad Digital;Prompt Sage;Rookie;Investigación desinformación,Análisis lingüístico,Creación listas palabras;Calidad lista palabras,Relevancia patrones;Prepa Conciencia Digital;2025-04-05;assets/img/certificado.png;assets/img/certificado.png","Python;python;Software | JavaScript;js;Software | Expresiones Regulares (Regex);code;Tool | Análisis de Texto;file-lines;Tool | Pensamiento Crítico;brain;Tool","Artículo sobre Patrones Fake News;https://www.poynter.org/fact-checking/2020/how-to-spot-misinformation-patterns/;link | Lista Palabras Clickbait (Ejemplo);https://github.com/dar5hak/clickbait-detector/blob/master/classifier/data/vocabulary.json;link","assets/img/fake-news-detector/gallery-01.png;Función Python usando Regex para detectar mayúsculas excesivas.;Detección Mayúsculas | assets/img/fake-news-detector/gallery-02.png;Lista de palabras clave consideradas 'sensacionalistas'.;Lista Palabras Clave | assets/img/fake-news-detector/gallery-03.png;Prototipo de interfaz web simple para el detector.;Interfaz Usuario",1,2,3,1,2
"Juego de Realidad Aumentada 'Caza Tesoros QR' (AR.js)","Realidad Aumentada / Gamificación","Secundaria","2024-10-25","4,11","¡A la Caza! Tesoro QR en AR","Un juego simple basado en web que usa AR.js para detectar códigos QR específicos. Al detectar un QR válido, muestra un objeto 3D (parte del tesoro) y da una pista para el siguiente QR.","assets/img/ar-qr-treasure/cover.jpg","Smartphone mostrando un cofre del tesoro 3D flotando sobre un código QR detectado.","Hacer búsquedas del tesoro más interactivas usando tecnología AR accesible desde el navegador. Fomentar exploración y resolución de problemas.","Crear múltiples códigos QR únicos. Asociar cada QR a un marcador AR.js diferente. Configurar una escena A-Frame/AR.js que detecte estos marcadores. Al detectar uno, mostrar un objeto 3D asociado y texto (pista). Guiar al usuario al siguiente QR.","<p><strong>Diseño Juego:</strong> Definir secuencia de pistas y objetos 3D. Crear códigos QR únicos para cada paso.</p><p><strong>Setup AR:</strong> Crear página HTML con A-Frame/AR.js. Generar archivos `.patt` para cada QR (o usar QR como marcadores si AR.js lo permite directamente).</p><p><strong>Escena A-Frame:</strong> Crear entidades `<a-marker>` para cada QR. Dentro de cada marcador, añadir el `<a-entity>` con el modelo 3D (`gltf-model`) y un `<a-text>` para la pista. Implementar lógica simple (JS) para 'activar' la búsqueda del siguiente marcador una vez encontrado el actual (opcional).</p>","video","https://www.youtube.com/embed/PlufARUEpX8",,"Ricardo Lara;Desarrollador AR/JS;;Realidad Aumentada Lúdica;Reality Master;Master;A-Frame,AR.js,JavaScript,HTML/CSS,Códigos QR;Detección marcadores QR,Lógica juego,Visualización 3D;Escuela de Magia Digital;2024-10-20;assets/img/certificado.png;assets/img/certificado.png | Diana Mora;Diseñadora 3D / Contenido;;Realidad Aumentada Lúdica;Design Architect;Rookie;Modelado 3D (Blender/Tinkercad),Diseño pistas/narrativa;Calidad modelos 3D,Coherencia juego;Escuela de Magia Digital;2024-10-20;assets/img/certificado.png;assets/img/certificado.png","AR.js;camera;Software | A-Frame;cubes;Software | Códigos QR;qrcode;Tool | Modelos 3D (glTF);box-archive;Tool | Blender/Tinkercad;cube;Software","Generador Códigos QR;https://www.the-qrcode-generator.com/;link | Tutorial Marcadores AR.js;https://ar-js-org.github.io/AR.js-Docs/custom-markers/;website","assets/img/ar-qr-treasure/gallery-01.png;Ejemplo de código QR usado como marcador.;Marcador QR | assets/img/ar-qr-treasure/gallery-02.png;Modelo 3D de una llave (parte del tesoro).;Objeto 3D | assets/img/ar-qr-treasure/gallery-03.png;Código A-Frame mostrando la configuración de un marcador QR.;Código Escena AR",2,3,2,2,3